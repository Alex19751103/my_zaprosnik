//данный код сформирован автоматически, но скорее всего он Вам пригодится!
//Поехали!!!
Для Каждого СтрокаРезультата Из РезультатТаблица Цикл				
	
	//алгоритм обработки строки результата - начало ------>				
	
	Объект1с = СтрокаРезультата.Ссылка.ПолучитьОбъект();			
	
	
	//примеры кода:			
	//Объект1с.Комментарий = ПараметрыАлгоритма[0].Значение;			
	//Объект1с.ПометкаУдаления = Истина;			
	//Объект1с.ОбменДанными.Загрузка = Истина;			
	
	
	Объект1с.Записать();			
	
	//алгоритм обработки строки результата - конец <------				
	
КонецЦикла;	



//*****************************************************************************				


//Корректировка движений документа				
Для Каждого СтрокаРезультата Из РезультатТаблица Цикл				
	
	//алгоритм обработки строки результата - начало ------>			
	
	Объект1С = СтрокаРезультата.Ссылка.ПолучитьОбъект();			
	
	ХЗ = Объект1С.Движения.Хозрасчетный;			
	ХЗ.Прочитать();			
	Для Каждого Дв Из ХЗ Цикл			
		
		Дв.ПодразделениеДт = Дв.ПодразделениеКт;		
		
	КонецЦикла;			
	
	ХЗ.Записать();			
	
	//алгоритм обработки строки результата - конец <------			
	
КонецЦикла;				



//*****************************************************************************				



//Запись движений корреспонденций операции бух. по первой ее строке				
СсылкаСсылка = ПараметрыАлгоритма.НайтиПоИдентификатору(0).Значение;				
Объект1С= СсылкаСсылка.ПолучитьОбъект();				
ХЗ = Объект1С.Движения.Хозрасчетный;				
ХЗ.Прочитать();				

ТЧ = ХЗ.Выгрузить();				
М = Новый Массив;				
М.Добавить(ТЧ[0]);				
ТЧ = ТЧ.Скопировать(М);				

//Для Каждого Колонка Из ТЧ.Колонки Цикл				
//Если Найти(Колонка.Имя,"ВидСубконто") > 0 Тогда			
//Сообщить(Колонка.Имя + "   " + ТЧ[0][Колонка.Имя]);		
//КонецЕсли;			
//КонецЦикла;				

Для Каждого СтрокаРезультата Из РезультатТаблица Цикл				
	
	НоваяСтрока = ТЧ.Добавить();			
	ЗаполнитьЗначенияСвойств(НоваяСтрока,ТЧ[0]);			
	ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаРезультата);			
	НоваяСтрока.Период  = Объект1С.Дата;			
	
	//алгоритм обработки строки результата - начало ------>			
	
	НоваяСтрока.СубконтоДт1  = СтрокаРезультата.СубконтоДт1;			
	НоваяСтрока.СубконтоДт2  = СтрокаРезультата.СубконтоДт2;			
	НоваяСтрока.СубконтоДт3  = СтрокаРезультата.СубконтоДт3;			
	
	НоваяСтрока.СубконтоКт1  = СтрокаРезультата.СубконтоКт1;			
	НоваяСтрока.СубконтоКт2  = СтрокаРезультата.СубконтоКт2;			
	НоваяСтрока.СубконтоКт3  = СтрокаРезультата.СубконтоКт3;			
	
	НоваяСтрока.ПодразделениеДт  = СтрокаРезультата.Подразделение;			
	НоваяСтрока.ПодразделениеКт  = СтрокаРезультата.Подразделение;			
	
	НоваяСтрока.Количество =  СтрокаРезультата.КоличествоОстатокДт;			
	НоваяСтрока.Сумма =  СтрокаРезультата.СуммаОстатокДт;			
	
	НоваяСтрока.СуммаНуДт =  СтрокаРезультата.СуммаОстатокДт;			
	НоваяСтрока.СуммаНуКт =  СтрокаРезультата.СуммаОстатокДт;			
	
	НоваяСтрока.Содержание =  "";			
	
	//алгоритм обработки строки результата - конец <------			
	
КонецЦикла;				

ТЧ.Удалить(0);				

ХЗ.Загрузить(ТЧ);				
ХЗ.Записать();				
Объект1С.Комментарий = "";				
Объект1С.СуммаОперации = ТЧ.Итог("Сумма");				
Объект1С.Ответственный = ПараметрыСеанса.ТекущийПользователь;				
Объект1С.Записать();				



//*****************************************************************************				


//Запись движений корреспонденций операции бух. по первой ее строке(продвинутая)				
СсылкаСсылка = ПараметрыАлгоритма.НайтиПоИдентификатору(0).Значение;				
Объект1С= СсылкаСсылка.ПолучитьОбъект();				
ХЗ = Объект1С.Движения.Хозрасчетный;				
ХЗ.Прочитать();				

ТЧ = ХЗ.Выгрузить();				
М = Новый Массив;				
М.Добавить(ТЧ[0]);				
ТЧ = ТЧ.Скопировать(М);				

Для Каждого СтрокаРезультата Из РезультатТаблица Цикл				
	
	СтрокаТЧ = ТЧ.Добавить();			
	ЗаполнитьЗначенияСвойств(СтрокаТЧ,ТЧ[0]);			
	ЗаполнитьЗначенияСвойств(СтрокаТЧ,СтрокаРезультата,"СчетДт,СчетКт,Сумма,Количество");			
	
	СоотСубконто = Новый Соответствие;			
	Для Сч = 1 по 3 Цикл			
		СоотСубконто.Вставить(ТипЗнч(СтрокаРезультата["СубконтоДт" + Сч]),СтрокаРезультата["СубконтоДт" + Сч]);		
		СтрокаТЧ["СубконтоДт" + Сч] = Неопределено;		
		СтрокаТЧ["ВидСубконтоДт" + Сч] = Неопределено;		
	КонецЦикла;			
	
	Для Сч = 1 по СтрокаТЧ.СчетДт.ВидыСубконто.Количество() Цикл			
		ВидСубконто = СтрокаТЧ.СчетДт.ВидыСубконто[сч-1].ВидСубконто;		
		Для Каждого Тип Из ВидСубконто.ТипЗначения.Типы() Цикл		
			Если СоотСубконто[Тип] <> Неопределено Тогда	
				СтрокаТЧ["ВидСубконтоДт" + Сч] = ВидСубконто;
				СтрокаТЧ["СубконтоДт" + Сч] = СоотСубконто[Тип];
			КонецЕсли;	
		КонецЦикла;		
	КонецЦикла;			
	
	СоотСубконто = Новый Соответствие;			
	Для Сч = 1 по 3 Цикл			
		СоотСубконто.Вставить(ТипЗнч(СтрокаРезультата["СубконтоКт" + Сч]),СтрокаРезультата["СубконтоКт" + Сч]);		
		СтрокаТЧ["СубконтоКт" + Сч] = Неопределено;		
		СтрокаТЧ["ВидСубконтоКт" + Сч] = Неопределено;		
	КонецЦикла;			
	
	Для Сч = 1 по СтрокаТЧ.СчетКт.ВидыСубконто.Количество() Цикл			
		ВидСубконто = СтрокаТЧ.СчетКт.ВидыСубконто[сч-1].ВидСубконто;		
		Для Каждого Тип Из ВидСубконто.ТипЗначения.Типы() Цикл		
			Если СоотСубконто[Тип] <> Неопределено Тогда	
				СтрокаТЧ["ВидСубконтоКт" + Сч] = ВидСубконто;
				СтрокаТЧ["СубконтоКт" + Сч] = СоотСубконто[Тип];
			КонецЕсли;	
		КонецЦикла;		
	КонецЦикла;			
	
	СтрокаТЧ.ПодразделениеДт = СтрокаРезультата.Подразделение;				
	СтрокаТЧ.ПодразделениеКт = СтрокаРезультата.Подразделение;				
	СтрокаТЧ.СуммаНУДт = СтрокаРезультата.Сумма;			
	СтрокаТЧ.СуммаНУКт = СтрокаРезультата.Сумма;			
	СтрокаТЧ.КоличествоКт = СтрокаРезультата.Количество;			
	
КонецЦикла;				

ТЧ.Удалить(0);				

ХЗ.Загрузить(ТЧ);				
ХЗ.Записать();				
Объект1С.Комментарий = "Списание остатка с 10.11.1";				
Объект1С.СуммаОперации = ТЧ.Итог("Сумма");				
Объект1С.Ответственный = ПараметрыСеанса.ТекущийПользователь;				
Объект1С.Записать();				



//*****************************************************************************				



//Замена счета в движениях				
Объект1С = ПараметрыАлгоритма.НайтиПоИдентификатору(3).Значение.ПолучитьОбъект();				

ХЗ = Объект1С.Движения.Хозрасчетный;				
ХЗ.Прочитать();				
М = Новый Массив;				
сч = 0;				
Для Каждого Дв Из ХЗ Цикл				
	
	//алгоритм обработки строки результата - начало ------>				
	
	Если Дв.СчетДт = ПараметрыАлгоритма.НайтиПоИдентификатору(1).Значение И Дв.СчетКт = ПараметрыАлгоритма.НайтиПоИдентификатору(2).Значение Тогда				
		
		Дв.СчетДт = ПараметрыАлгоритма.НайтиПоИдентификатору(4).Значение;			
		
		Попытка			
			НГ = РезультатТаблица[сч].Ссылка;		
		Исключение			
			сч = 0;		
			НГ = РезультатТаблица[сч].Ссылка;		
		КонецПопытки;			
		
		сч = сч + 1;			
		
		Дв.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = НГ;			
		
		//Удалим лишнее			
		Для каждого Субконто из Дв.СубконтоДт Цикл			
			Флажок = Ложь;		
			Для каждого ВидыСубконто из Дв.СчетДт.ВидыСубконто Цикл		
				Если ВидыСубконто.ВидСубконто = Субконто.Ключ Тогда	
					Флажок = Истина;
					Прервать;
				КонецЕсли;	
			КонецЦикла;		
			
			Если НЕ Флажок Тогда		
				Дв.СубконтоДт.Удалить(Субконто.Ключ);	
			КонецЕсли;		
		КонецЦикла;			
		М.Добавить(Дв);			
		
	КонецЕсли;				
	
	//алгоритм обработки строки результата - конец <------				
	
КонецЦикла;				

Для Каждого Дв Из М Цикл				
	
	НовыйДв = ХЗ.Добавить();			
	ЗаполнитьЗначенияСвойств(НовыйДв,Дв);			
	НовыйДв.СчетДт = ПараметрыАлгоритма.НайтиПоИдентификатору(5).Значение;			
	НовыйДв.СчетКт = ПараметрыАлгоритма.НайтиПоИдентификатору(4).Значение;			
	
	НовыйДв.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат]         = Дв.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат];			
	НовыйДв.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = Дв.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы];			
	
	НовыйДв.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат]         = Дв.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат];			
	НовыйДв.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = Дв.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы];			
	
	НовыйДв.Содержание = "Корректировка выпуска продукции (услуг)#";			
	
КонецЦикла;				

ХЗ.Записать()				


//*****************************************************************************				


//Свертка движений Операциябух				
Для Каждого СтрокаРезультата Из РезультатТаблица Цикл				
	
	//алгоритм обработки строки результата - начало ------>			
	
	Объект1С= СтрокаРезультата.Ссылка.ПолучитьОбъект();			
	ХЗ= Объект1С.Движения.Хозрасчетный;			
	ХЗ.Прочитать();			
	ТЗ = ХЗ.Выгрузить();			
	ТЗ.Свернуть("Период,СчетДт,СчетКт,Организация,ВалютаДт,ВалютаКт,ПодразделениеДт,ПодразделениеКт,Содержание,НеКорректироватьСтоимостьАвтоматически,ВидСубконтоДт1,СубконтоДт1,ВидСубконтоДт2,СубконтоДт2,ВидСубконтоДт3,СубконтоДт3,ВидСубконтоКт1,СубконтоКт1,ВидСубконтоКт2,СубконтоКт2,ВидСубконтоКт3,СубконтоКт3","Сумма,ВалютнаяСуммаДт,ВалютнаяСуммаКт,КоличествоДт,КоличествоКт,СуммаНУДт,СуммаНУКт,СуммаПРДт,СуммаПРКт,СуммаВРДт,СуммаВРКт");			
	
	ХЗ.Загрузить(ТЗ);			
	ХЗ.Записать();			
	
	//алгоритм обработки строки результата - конец <------			
	
КонецЦикла;				


//*****************************************************************************				


//Заполнение движений хозрасчетный				
ОперацияБух = ПараметрыАлгоритма.НайтиПоИдентификатору(0).Значение.ПолучитьОбъект();				
Движения = ОперацияБух.Движения;				
Хозрасчетный = Движения.Хозрасчетный;				
Хозрасчетный.Очистить();				
Хозрасчетный.Записать();				

Для Каждого СтрокаРезультата Из РезультатТаблица Цикл				
	
	//алгоритм обработки строки результата - начало ------>			
	
	Дв=Хозрасчетный.Добавить();			
	Дв.Период =	ОперацияБух.Дата;		
	Дв.СчетДт = СЧ91_02;			
	Дв.СчетКт = СЧ10_11;			
	БухгалтерскийУчет.УстановитьСубконто(Дв.СчетДт, Дв.СубконтоДт, "СтатьиЗатрат", СтрокаСпособ.Субконто2);			
	БухгалтерскийУчет.УстановитьПодразделениеПроводки(Дв,Объект1С.ПодразделениеОрганизации,"Дт");			
	БухгалтерскийУчет.УстановитьПодразделениеПроводки(Дв,Объект1С.ПодразделениеОрганизации,"Кт");			
	
	//алгоритм обработки строки результата - конец <------			
	
КонецЦикла;				

Хозрасчетный.Записать();				


//*****************************************************************************				


//Корректировка движений одного документа				
Объект1С = ПараметрыАлгоритма.НайтиПоИдентификатору(0).Значение.ПолучитьОбъект();				

ХЗ = Объект1С.Движения.Хозрасчетный;				
ХЗ.Прочитать();				
Для Каждого Дв Из ХЗ Цикл				
	
	Если НЕ ЗначениеЗаполнено(ДВ.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПартииМатериаловВЭксплуатации]) Тогда			
		
		ПартияМатериаловВЭксплуатации =  Документы.ПартияМатериаловВЭксплуатации.СоздатьДокумент();		
		ПартияМатериаловВЭксплуатации.Дата = Объект1С.Дата;		
		ПартияМатериаловВЭксплуатации.Проведен = Истина;		
		ПартияМатериаловВЭксплуатации.Организация = Объект1С.Организация;		
		ПартияМатериаловВЭксплуатации.Номенклатура = ДВ.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура];		
		ПартияМатериаловВЭксплуатации.Комментарий = "Создан при вводе остатков ГВСУ15";		
		ПартияМатериаловВЭксплуатации.Записать();		
		ДВ.СубконтоДт.Вставить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПартииМатериаловВЭксплуатации,ПартияМатериаловВЭксплуатации.Ссылка);		
		
	КонецЕсли;			
	
КонецЦикла;				

ХЗ.Записать();				


//*****************************************************************************				


//чистка движений документа				
Для Каждого СтрокаРезультата Из РезультатТаблица Цикл				
	
	//алгоритм обработки строки результата - начало ------>				
	ОБ = СтрокаРезультата.Регистратор.ПолучитьОбъект();			
	Для Каждого ДВ Из ОБ.Движения Цикл			
		ДВ.Прочитать();		
		ДВ.Очистить();		
		ДВ.Записать();		
	КонецЦикла;			
	
	//алгоритм обработки строки результата - конец <------				
	
КонецЦикла;				


//*****************************************************************************				


//Вызов процедуры обработки				
Обработка =  РеквизитФормыВЗначение("Объект");				
Для Каждого СтрокаРезультата Из РезультатТаблица Цикл				
	
	//алгоритм обработки строки результата - начало ------>			
	//Рез = Обработка.ЧислоИзСтроки(СтрокаРезультата.<>);			
	//Рез = Обработка.ДатаИзСтроки(СтрокаРезультата.<>);			
	//Рез = Обработка.СтраховойНомерПФРСоответствуетТребованиям(СтрокаРезультата.<>);			
	//Рез = Обработка.КППСоответствуетТребованиям(СтрокаРезультата.<>);			
	Рез = Обработка.ИННСоответствуетТребованиям(СтрокаРезультата.ИНН), СтрокаРезультата.ЮридическоеФизическоеЛицо);			
	//Рез = Обработка._ТолькоЦифрыВСтроке(СтрокаРезультата.<>);			
	//Рез = НормализацияТелефонов(СтрокаРезультата.<>);			
	//Обработка.РаспределитьСуммуПропорциональноБазе(мТаблица, ИмяКолонкиБазы, ИмяКолонкиДляРаспределения, СтрокаРезультата.Сумма)			
	
	Сообщить("" + СтрокаРезультата.Ссылка + " " + рез);			
	
	//алгоритм обработки строки результата - конец <------			
	
КонецЦикла;				



//*****************************************************************************				



//Установка значений свойств объектов				
Для Каждого СтрокаРезультата Из РезультатТаблица Цикл				
	
	//алгоритм обработки строки результата - начало ------>			
	
	ТаблицаСвойствИЗначений = Новый ТаблицаЗначений;			
	Колонки = ТаблицаСвойствИЗначений.Колонки;			
	Колонки.Добавить("Свойство");			
	Колонки.Добавить("Значение");			
	
	ДопСвойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "НомерГосударственногоКонтрактаДоговора_97046b9440dd46d09c3f4a3e5e20eaf0");			
	НоваяСтрока =  ТаблицаСвойствИЗначений.Добавить();			
	НоваяСтрока.Свойство = ДопСвойство;			
	НоваяСтрока.Значение = "" + Обработка.ВырезатьЧислоИзСтроки(СтрокаРезультата.Наименование,25);			
	
	УправлениеСвойствами.ЗаписатьСвойстваУОбъекта(СтрокаРезультата.Ссылка, ТаблицаСвойствИЗначений);			
	
	
	//алгоритм обработки строки результата - конец <------			
	
КонецЦикла;				



//*****************************************************************************				



//Запись независимого регистра сведений				
Для Каждого СтрокаРезультата Из РезультатТаблица Цикл				
	
	МенеджерЗаписи = РегистрыСведений.расш1_ПубличныеИдентификаторыСинхронизируемыхОбъектов.СоздатьМенеджерЗаписи();			
	МенеджерЗаписи.Ссылка = СсылкаПодразделение;			
	МенеджерЗаписи.Идентификатор =  СтрокаРезультата.Ссылка.УникальныйИдентификатор();			
	МенеджерЗаписи.Узел = "КД2.0";			
	МенеджерЗаписи.ТипИсточника =  Метаданные.НайтиПоТипу(ТипЗнч(СтрокаРезультата.Ссылка)).ПолноеИмя();			
	МенеджерЗаписи.СтрокаИменСвойствПоиска = "";			
	МенеджерЗаписи.ИдентификаторПредставление = "" + СтрокаРезультата.Ссылка;			
	МенеджерЗаписи.Записать();			
	
КонецЦикла;				



//*****************************************************************************								



//Изменение независимого регистра сведений				
Для Каждого СтрокаРезультата Из РезультатТаблица Цикл				
	
	НаборЗаписей = РегистрыСведений.расш1_ПубличныеИдентификаторыСинхронизируемыхОбъектов.СоздатьНаборЗаписей();  			
	НаборЗаписей.Отбор.Идентификатор.Установить(СтрокаРезультата.Идентификатор);
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() = 0 Тогда
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись,СтрокаРезультата);
	ИначеЕсли НаборЗаписей.Количество() = 1 Тогда
		НоваяЗапись = НаборЗаписей[0];
		НоваяЗапись.СтрокаИменСвойствПоиска = СтрокаРезультата.<>;
	КонецЕсли;
	НаборЗаписей.Записать();	
	
КонецЦикла;				



//*****************************************************************************		



//Выборочная чистка записей регистра свелений подчиненного регистратору				
Для Каждого СтрокаРезультата Из РезультатТаблица Цикл				
	
	//алгоритм обработки строки результата - начало ------>			
	
	//Для каждого регистратора выполним изменение набора записей			
	НаборЗаписей = РегистрыСведений.РасчетКалькуляцииСебестоимости.СоздатьНаборЗаписей();			
	НаборЗаписей.Отбор.Регистратор.Установить(СтрокаРезультата.Регистратор); //обязательно для подчиненных регистров			
	НаборЗаписей.Прочитать();			
	
	сзУдаляемыеЗаписи = Новый СписокЗначений;			
	Для Каждого Запись Из НаборЗаписей Цикл			
		Если Запись.НоменклатурнаяГруппа = ПараметрыАлгоритма.НайтиПоИдентификатору(0).Значение		
			ИЛИ Запись.НоменклатурнаяГруппа = ПараметрыАлгоритма.НайтиПоИдентификатору(1).Значение  Тогда	
			сзУдаляемыеЗаписи.Добавить(Запись);	
		КонецЕсли; //[условие]		
	КонецЦикла;			
	
	Для каждого ЭлтСз Из сзУдаляемыеЗаписи Цикл			
		НаборЗаписей.Удалить(ЭлтСз.Значение);		
	КонецЦикла;			
	
	НаборЗаписей.Записать();			
	
	
	//алгоритм обработки строки результата - конец <------			
	
КонецЦикла;


//*****************************************************************************							


//Запись ТЧ нескольких документов
СсылкаСсылка = РезультатТаблица[0].Ссылка;
Объект1С = СсылкаСсылка.ПолучитьОбъект();
ТЧ = Объект1С.ОС;
//примеры кода:
//Объект1С.Комментарий = ПараметрыАлгоритма[0].Значение;
//Объект1С.ПометкаУдаления = Истина;
//Объект1С.ОбменДанными.Загрузка = Истина;
БылиИзменения = Ложь;
Для Каждого СтрокаРезультата Из РезультатТаблица Цикл
	
		
	Если НЕ СтрокаРезультата.Ссылка = СсылкаСсылка Тогда
		Если БылиИзменения Тогда
			Объект1С.Записать(РежимЗаписиДокумента.Проведение);
			БылиИзменения = Ложь;
			Сообщить(СсылкаСсылка);
		КонецЕсли;
		СсылкаСсылка = СтрокаРезультата.Ссылка;
		Объект1С = СсылкаСсылка.ПолучитьОбъект();
		ТЧ = Объект1С.ОС;
		//примеры кода:
		//Объект1С.Комментарий = ПараметрыАлгоритма[0].Значение;
		//Объект1С.ПометкаУдаления = Истина;
		//Объект1С.ОбменДанными.Загрузка = Истина;
		
	КонецЕсли;
	
	//алгоритм обработки строки результата - начало ------>

	СтрокаТЧ = СтрокаРезультата.НомерСтроки - 1;
	Если ТЧ[СтрокаТЧ].ДатаПринятияКУчетуРегл > СтрокаРезультата.Период Тогда
		ТЧ[СтрокаТЧ].НомерДокументаПринятияКУчетуРегл = СтрокаРезультата.НомерДокумента;
		ТЧ[СтрокаТЧ].ДатаПринятияКУчетуРегл = СтрокаРезультата.Период;
		ТЧ[СтрокаТЧ].НазваниеДокументаПринятияКУчетуРегл = СтрокаРезультата.НазваниеДокумента;
		БылиИзменения = Истина;
	КонецЕсли;
	
	//алгоритм обработки строки результата - конец <------
	
КонецЦикла;

Если БылиИзменения Тогда
	Объект1С.Записать(РежимЗаписиДокумента.Проведение);
	БылиИзменения = Ложь;
	Сообщить(СсылкаСсылка);
КонецЕсли;




//*****************************************************************************							



//Выборочная чистка записей движений
Массив = Новый Массив;
Массив.Добавить("РасчетПорядкаПеределов");
Массив.Добавить("РасчетСебестоимостиПродукции");
Массив.Добавить("РасчетКалькуляцииСебестоимости");
Массив.Добавить("СтруктураСтоимостиЗапасов");
Массив.Добавить("РасчетРаспределенияКосвенныхРасходов");

Для Каждого СтрокаРезультата Из РезультатТаблица Цикл
	
	Для Каждого ЭлМассива Из Массив Цикл
		
		БылиИзменения = Ложь;
		
		НаборЗаписей = РегистрыСведений[ЭлМассива].СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(СтрокаРезультата.Регистратор);
		НаборЗаписей.Прочитать();
		
		МассивКУдалению = Новый Массив;
		
		Для Каждого Запись Из НаборЗаписей Цикл
			
			Если ЭлМассива = "СтруктураСтоимостиЗапасов" Тогда
				Если Запись.АналитикаУчетаЗатрат.Субконто1 = ПараметрыАлгоритма.НайтиПоИдентификатору(1).Значение Тогда
					МассивКУдалению.Добавить(Запись);
				КонецЕсли; 
			ИначеЕсли ЭлМассива = "РасчетРаспределенияКосвенныхРасходов" Тогда
				Если Запись.НоменклатурнаяГруппаРаспределения = ПараметрыАлгоритма.НайтиПоИдентификатору(1).Значение Тогда
					МассивКУдалению.Добавить(Запись);
				КонецЕсли; 
			Иначе
				Если Запись.НоменклатурнаяГруппа = ПараметрыАлгоритма.НайтиПоИдентификатору(1).Значение Тогда
					МассивКУдалению.Добавить(Запись);
				КонецЕсли; 
			КонецЕсли;
			
		КонецЦикла;
		
		Для каждого ЭлтСз Из МассивКУдалению Цикл
			НаборЗаписей.Удалить(ЭлтСз);
			БылиИзменения = Истина;
		КонецЦикла;
		
		Если БылиИзменения Тогда
			НаборЗаписей.Записать();
		КонецЕсли;
				
	КонецЦикла;
	
КонецЦикла;	



//*****************************************************************************							



//Запись ТЧ нескольких документов
СсылкаСсылка = РезультатТаблица[0].Ссылка;
Объект1С = СсылкаСсылка.ПолучитьОбъект();
ТЧ = Объект1С.БухСправка;
БылиИзменения = Ложь;
Для Каждого СтрокаРезультата Из РезультатТаблица Цикл	
		
	Если НЕ СтрокаРезультата.Ссылка = СсылкаСсылка Тогда
		Если БылиИзменения Тогда
			Объект1С.Записать(РежимЗаписиДокумента.Запись);
			БылиИзменения = Ложь;
			Сообщить(СсылкаСсылка);
		КонецЕсли;
		СсылкаСсылка = СтрокаРезультата.Ссылка;
		Объект1С = СсылкаСсылка.ПолучитьОбъект();
		ТЧ = Объект1С.БухСправка;		
	КонецЕсли;
	
	//алгоритм обработки строки результата - начало ------>

	СтрокаТЧ = СтрокаРезультата.НомерСтроки - 1;
	Если ТЧ[СтрокаТЧ].СчетУчета <> ПараметрыАлгоритма.НайтиПоИдентификатору(0).Значение Тогда
		ТЧ[СтрокаТЧ].СчетУчета = ПараметрыАлгоритма.НайтиПоИдентификатору(0).Значение;
		БылиИзменения = Истина;
	КонецЕсли;
	
	//алгоритм обработки строки результата - конец <------
	
КонецЦикла;

Если БылиИзменения Тогда
	Объект1С.Записать(РежимЗаписиДокумента.Запись);
	Сообщить(СсылкаСсылка);
КонецЕсли;


						
//*****************************************************************************							



//Чистка ТЧ нескольких документов
СсылкаСсылка = РезультатТаблица[0].Ссылка;
Объект1С = СсылкаСсылка.ПолучитьОбъект();
ТЧ = Объект1С.БухСправка;
МассивКУдалению = Новый Массив;

Для Каждого СтрокаРезультата Из РезультатТаблица Цикл	
	//Сообщить("" + СтрокаРезультата.Ссылка + " " + СтрокаРезультата.НомерСтроки);	
	Если НЕ СтрокаРезультата.Ссылка = СсылкаСсылка Тогда
	    
		Для Каждого ЭлМассивКУдалению Из МассивКУдалению Цикл
			ТЧ.Удалить(ЭлМассивКУдалению);
		КонецЦикла;

		Объект1С.Записать(РежимЗаписиДокумента.Запись);
		СсылкаСсылка = СтрокаРезультата.Ссылка;
		Объект1С = СсылкаСсылка.ПолучитьОбъект();
		ТЧ = Объект1С.БухСправка;
		МассивКУдалению = Новый Массив;
	
	КонецЕсли;
	
	//алгоритм обработки строки результата - начало ------>

	СтрокаТЧ = ТЧ[СтрокаРезультата.НомерСтроки - 1];
	МассивКУдалению.Добавить(СтрокаТЧ);
	
	//алгоритм обработки строки результата - конец <------
	
КонецЦикла;


Для Каждого ЭлМассивКУдалению Из МассивКУдалению Цикл
	ТЧ.Удалить(ЭлМассивКУдалению);
КонецЦикла;

Объект1С.Записать(РежимЗаписиДокумента.Запись);


		