&НаКлиенте
Перем мПутьКОбработке Экспорт;

&НаКлиенте
Процедура ОбъектСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Элементы.ОбъектСтрокой.ВыбиратьТип = ОбъектСтрокой = Неопределено;
	Если Элементы.ОбъектСтрокой.ВыбиратьТип Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыИсходящие = Новый Структура("ВыбираемыеТипы",ТипЗначенияПараметра);
		ОткрытьФормуСовместимость82(мПутьКОбработке+".ВыборТипаУпр",ПараметрыИсходящие,"НачалоВыбораЗавершение");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НачалоВыбораЗавершение(Результат,ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		ОбъектСтрокой = Результат;
	КонецЕсли;
КонецПроцедуры // НачалоВыбораЗавершение()


&НаКлиенте
Процедура ОткрытьФормуСовместимость82(ИмяОткрываемойФормы,СтруктураПараметров = Неопределено,МодульРезультата = "") Экспорт
	
	Если ВладелецФормы.Это82() Тогда
		Результат = ОткрытьФормуМодально(ИмяОткрываемойФормы,СтруктураПараметров,ЭтаФорма);
		Если МодульРезультата <> "" Тогда
			Выполнить(МодульРезультата+"(Результат,Неопределено)");
		КонецЕсли;
	Иначе
		Если МодульРезультата <> "" Тогда
			ОписаниеОповещения = Неопределено;
			Выполнить("ОписаниеОповещения = Новый ОписаниеОповещения(МодульРезультата,ЭтаФорма)");
			Выполнить("ОткрытьФорму(ИмяОткрываемойФормы,СтруктураПараметров,ЭтаФорма,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца)");
		Иначе
			Выполнить("ОткрытьФорму(ИмяОткрываемойФормы,СтруктураПараметров,ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца)");
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры // ОткрытьФормуСовместимость82()


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	мПутьКОбработке = ВладелецФормы.мПутьКОбработке;
КонецПроцедуры


&НаКлиенте
Процедура ОбъектСтрокойИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОбъектСтрокой = ПреобразоватьИзСтроковогоПредставленияНаСервере(ТипЗнч(ОбъектСтрокой),Текст);
	Попытка
		УИД_Строкой = ОбъектСтрокой.УникальныйИдентификатор();
		Ссылка_строкой = ПолучитьНавигационнуюСсылку(ОбъектСтрокой);
	Исключение
	КонецПопытки;
КонецПроцедуры


&НаСервере
Функция ПреобразоватьИзСтроковогоПредставленияНаСервере(ТипОбъекта,СтрокаПоиска)
	
	СтрокаGUID = СокрЛП(СтрокаПоиска);
	
	Если Лев(СтрокаGUID,11) = "e1cib/data/" Тогда
		Попытка							
			ПерваяТочка = Найти(СтрокаGUID, "e1cib/data/");
			ВтораяТочка = Найти(СтрокаGUID, "?ref=");
			ПредставлениеТипа   = Сред(СтрокаGUID, ПерваяТочка + 11, ВтораяТочка - ПерваяТочка - 11);
			ШаблонЗначения = ЗначениеВСтрокуВнутр(ПредопределенноеЗначение(ПредставлениеТипа + ".ПустаяСсылка"));
			Возврат ЗначениеИзСтрокиВнутр((СтрЗаменить(ШаблонЗначения, "00000000000000000000000000000000", Сред(СтрокаGUID, ВтораяТочка + 5))));
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	Попытка
		МД = Метаданные.НайтиПоТипу(ТипОбъекта);
		ИмяОбъекта = МД.Имя;
		ПолноеИмя = МД.ПолноеИмя();
		Представление = МД.Представление();
		Если Найти(ПолноеИмя,"Справочник.") > 0 Тогда
			МенеджерОбъекта = Справочники;
		ИначеЕсли Найти(ПолноеИмя,"Документ.") > 0  Тогда
			МенеджерОбъекта = Документы;
		ИначеЕсли Найти(ПолноеИмя,"ПланВидовХарактеристик.") > 0  Тогда
			МенеджерОбъекта = ПланыВидовХарактеристик;
		ИначеЕсли Найти(ПолноеИмя,"ПланВидовРасчета.") > 0  Тогда
			МенеджерОбъекта = ПланыВидовРасчета;
		ИначеЕсли Найти(ПолноеИмя,"ПланСчетов.") > 0  Тогда
			МенеджерОбъекта = ПланыСчетов;
		Иначе
			Возврат СтрокаGUID;
		КонецЕсли;
		
	Исключение
		Возврат СтрокаGUID;
	КонецПопытки;
	
	Если СтрДлина(СтрокаGUID) <> 36 Тогда
		
		СтрокаGUID = СтрЗаменить(СтрокаGUID,"<Объект не найден> (","");
		СтрокаGUID = СтрЗаменить(СтрокаGUID,")","");
		СтрокаGUID = СтрЗаменить(СтрокаGUID,"0x","");
		СтрокаGUID = Сред(СтрокаGUID, Найти(СтрокаGUID,":")+1, СтрДлина(СтрокаGUID));
		СтрокаGUID = Сред(СтрокаGUID,25,8)+"-"+Сред(СтрокаGUID,21,4)+"-"+Сред(СтрокаGUID,17,4)+"-"+Сред(СтрокаGUID,1,4)+"-"+Сред(СтрокаGUID,5,12);				
		
	КонецЕсли;	
	
	Если СтрДлина(СтрокаGUID) <> 36 И МенеджерОбъекта = Документы Тогда	
		
		Попытка
			СтрокаНомерДата = СокрЛП(СтрЗаменить(СтрокаПоиска,Представление,""));
			МассивНомерДата = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаНомердата," от ");
			НомерДок = СокрЛП(МассивНомерДата[0]);
			СтрокаДата = СокрЛП(МассивНомерДата[1]);
			ДатаПоЭлементам = СтрЗаменить(СтрЗаменить(СтрокаДата," ",":"),".",":");
			МассивЭлементовДаты = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ДатаПоЭлементам,":");
			ДатаДок = Дата(МассивЭлементовДаты[2],МассивЭлементовДаты[1],МассивЭлементовДаты[0],
			МассивЭлементовДаты[3],МассивЭлементовДаты[4],МассивЭлементовДаты[5]);
			//Получим нужный документ
			Возврат Документы[ИмяОбъекта].НайтиПоНомеру(НомерДок,ДатаДок);
		Исключение
			Возврат СтрокаGUID;
		КонецПопытки;
		
	ИначеЕсли СтрДлина(СтрокаGUID) <> 36 Тогда
		Возврат СтрокаGUID;
	КонецЕсли;
	
	СсылкаНаОбъект = "";
	Попытка
		НовыйGUID = Новый УникальныйИдентификатор(СтрокаGUID);
	Исключение
		Возврат СтрокаGUID;
	КонецПопытки;
	
	Попытка
		СсылкаНаОбъект = МенеджерОбъекта[ИмяОбъекта].ПолучитьСсылку(НовыйGUID);	
		Возврат СсылкаНаОбъект;
	Исключение
	КонецПопытки;
	
	Возврат СтрокаGUID;
	
КонецФункции

&НаКлиенте
Процедура ОбъектСтрокойОчистка(Элемент, СтандартнаяОбработка)
	Элементы.ОбъектСтрокой.ВыбиратьТип = Истина;
КонецПроцедуры

&НаСервереБезКонтекста
Функция СформироватьСтрокуПолученияСсылкиПоГУИД_НаСервере(СсылкаНаОбъект)
    
    ТекстПеременной = "";
    
    Если ТипЗнч(СсылкаНаОбъект) = Тип("Строка") Тогда
        ТекстПеременной = """" + СсылкаНаОбъект + """";
    ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("Число") Тогда
        ТекстПеременной = СсылкаНаОбъект;
    ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("Дата") Тогда
        ТекстПеременной = Формат(СсылкаНаОбъект, "ДФ=Дата(гггг,ММ,дд,ЧЧ,мм,сс)");
    ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("Булево") Тогда
        ТекстПеременной = Формат(СсылкаНаОбъект, "БЛ=Ложь; БИ=Истина");
    ИначеЕсли Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(СсылкаНаОбъект)) Тогда
        ТекстПеременной = "Документы." + СсылкаНаОбъект.Метаданные().Имя + ".ПолучитьСсылку(Новый УникальныйИдентификатор(""" + СсылкаНаОбъект.УникальныйИдентификатор() + """))";
    ИначеЕсли Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(СсылкаНаОбъект)) Тогда
        ТекстПеременной = "Справочники." + СсылкаНаОбъект.Метаданные().Имя + ".ПолучитьСсылку(Новый УникальныйИдентификатор(""" + СсылкаНаОбъект.УникальныйИдентификатор() + """))";
    ИначеЕсли ПланыВидовХарактеристик.ТипВсеСсылки().СодержитТип(ТипЗнч(СсылкаНаОбъект)) Тогда
        ТекстПеременной = "ПланыВидовХарактеристик." + СсылкаНаОбъект.Метаданные().Имя + ".ПолучитьСсылку(Новый УникальныйИдентификатор(""" + СсылкаНаОбъект.УникальныйИдентификатор() + """))";
    ИначеЕсли Перечисления.ТипВсеСсылки().СодержитТип(ТипЗнч(СсылкаНаОбъект)) Тогда
        пМетаданные = СсылкаНаОбъект.Метаданные();
        ИмяЗначения = пМетаданные.ЗначенияПеречисления[Перечисления[пМетаданные.Имя].Индекс(СсылкаНаОбъект)].Имя;
        ТекстПеременной = "Перечисления." + СсылкаНаОбъект.Метаданные().Имя + "." + ИмяЗначения;
    КонецЕсли;
    
    Возврат ТекстПеременной;
    
КонецФункции


&НаКлиенте
Процедура ОбъектСтрокойОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбъектСтрокой = СформироватьСтрокуПолученияСсылкиПоГУИД_НаСервере(ВыбранноеЗначение);
	Попытка
		УИД_Строкой = ВыбранноеЗначение.УникальныйИдентификатор();
		Ссылка_строкой = ПолучитьНавигационнуюСсылку(ВыбранноеЗначение);
	Исключение
	КонецПопытки;

КонецПроцедуры

&НаСервере
Процедура СоздатьОбъектНаСервере()
	
	Объект1С = ОбъектСтрокой.ПолучитьОбъект();
	Если Объект1С = Неопределено Тогда
		ТипОбъекта = ТипЗнч(ОбъектСтрокой);
		
		Попытка
			МД = Метаданные.НайтиПоТипу(ТипОбъекта);
			ИмяОбъекта = МД.Имя;
			ПолноеИмя = МД.ПолноеИмя();
			ЭтоДокумент = Ложь;
			Если Найти(ПолноеИмя,"Справочник.") > 0 Тогда
				МенеджерОбъекта = Справочники;
			ИначеЕсли Найти(ПолноеИмя,"Документ.") > 0  Тогда
				МенеджерОбъекта = Документы;
				ЭтоДокумент = Истина;
			ИначеЕсли Найти(ПолноеИмя,"ПланВидовХарактеристик.") > 0  Тогда
				МенеджерОбъекта = ПланыВидовХарактеристик;
			ИначеЕсли Найти(ПолноеИмя,"ПланВидовРасчета.") > 0  Тогда
				МенеджерОбъекта = ПланыВидовРасчета;
			ИначеЕсли Найти(ПолноеИмя,"ПланСчетов.") > 0  Тогда
				МенеджерОбъекта = ПланыСчетов;
			Иначе
				Возврат;
			КонецЕсли;
			
			Если ЭтоДокумент Тогда
				Объект1С = МенеджерОбъекта[ИмяОбъекта].СоздатьДокумент();
				Объект1С.Дата = ТекущаяДата();
			Иначе
				Объект1С = МенеджерОбъекта[ИмяОбъекта].СоздатьЭлемент();
			КонецЕсли;
			
			Объект1С.УстановитьСсылкуНового(ОбъектСтрокой);
			Объект1С.ОбменДанными.Загрузка = Истина;
			Объект1С.Записать();

		Исключение
			
		КонецПопытки;

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьОбъект(Команда)
	СоздатьОбъектНаСервере();
КонецПроцедуры



